<project name="DITA-OT Plugins" basedir="." default="scap-composer">
	
  <property file="build.properties"/>
  <property file="${user.home}/.build.properties"/>
  <property file="${user.home}/build.properties"/>
  <property file="${user.home}/build.properties.xml"/> <!-- define dita-ot-dir in this file -->
	
  <property name="dist" location="${basedir}/dist"/>
  <property name="composer" location="${basedir}/composer"/>
  <property name="composer-version" value="0.3.3"/>
  <property name="plugin.dist" location="${dist}/plugins"/>
  <property name="composer.plugins" location="${composer}/plugins"/>
  <property name="composer.examples" location="${composer}/examples"/>
  <property name="plugin-src" location="${basedir}/plugins"/>
  <property name="example-src" location="${basedir}/examples"/>
  <property name="plugin-copy_target" location="${dita-ot-dir}/plugins"/>
  <property name="ot-plugins-base-name" value="gov.nist.scap"/>

  <!--<import file="${dita-ot-dir}${file.separator}integrator.xml" optional="yes"/>
-->

  <target name="init">
  <tstamp/>
  </target>

  <tstamp>
	<format property="package.date" pattern="yyyy-MM-dd"/>
  </tstamp>

  <target name="clean">
  </target>
	
	
  <target name="dist-toolkit-plugins" 
      description="Packages the DITA Open Toolkit plugins for copying to a working Toolkit instance"
	  depends="dist-init"
  >
    <delete includeemptydirs="true" failonerror="false">
      <fileset dir="${plugin.dist}"/>
    </delete>
	<copy todir="${plugin.dist}">
		<fileset dir="${plugin-src}">
		  <!--<include name="gov.nist.scap.split/"/>-->
		  <include name="gov.nist.scap.datastream/"/>
		  <include name="gov.nist.scap.doctypes/"/>
		  <include name="gov.nist.scap.split/"/>
		  <include name="template_folders/"/>
		</fileset>
	</copy>
  </target>
	
  <target name="copy-toolkit-plugins" depends="dist-toolkit-plugins"
     description="Copy plugins to local DITA Open Toolkit">
    <delete failonerror="true" includeemptydirs="true">
      <fileset dir="${plugin-copy_target}" includes="${ot-plugins-base-name}.*/**"/>
    </delete>
    <mkdir dir="${plugin-copy_target}"/>
    <copy todir="${plugin-copy_target}"> 
      <fileset dir="${plugin.dist}">
        <include name="**/*"/>
      </fileset>
    </copy>
    <!-- Integrate the deployed plugins: -->
    <!--<antcall target="integrate"/>-->

  </target>
  
  <target name="scap-composer" depends="composer-init, dist-toolkit-plugins" 
    description="create SCAP Composer directory tree from applicable plug-ins">
    <delete includeemptydirs="true" failonerror="false">
      <fileset dir="${composer.plugins}"/>
    </delete>
    <copy todir="${composer.plugins}">
      <fileset dir="${plugin-src}">
        <include name="gov.nist.scap.split/"/>
        <include name="gov.nist.scap.datastream/"/>
        <include name="gov.nist.scap.doctypes/rnc/"/>
        <include name="gov.nist.scap.doctypes/template_folders/"/>
        <include name="gov.nist.scap.doctypes/catalog.xml"/>
        <include name="gov.nist.scap.doctypes/plugin.xml"/>
        <include name="template_folders/"/>
      </fileset>
      <fileset dir="${basedir}">
        <include name="scapComposer.scenarios"/>
        <include name="LICENSE-composer.txt"/>
        <include name="README-composer.txt"/>
      </fileset>
    </copy>
    <move file="${composer.plugins}/scapComposer.scenarios" tofile="${composer}/scapComposer.scenarios"/>
    <move file="${composer.plugins}/LICENSE-composer.txt" tofile="${composer}/LICENSE.txt"/>    
    <move file="${composer.plugins}/README-composer.txt" tofile="${composer}/README.txt">
      <filterchain>
        <filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
          <param type="token" name="VERSION" value="${composer-version}"/>
        </filterreader>
      </filterchain>
    </move>
    <copy todir="${composer.examples}">
      <fileset dir="${example-src}">
        <include name="nist-example/"/>
        <include name="ssg-ubuntu1404/"/>
        <include name="Windows_10_V1R15_STIG_SCAP_1-2/"/>
        <exclude name="**/out/"/>
        <exclude name="**/temp/"/>
        <exclude name="**/composed/"/>
      </fileset>
    </copy>    
  </target>
  
  <target name="scap-composer-zip" depends="scap-composer"
    description="zip up SCAP Composer distribution files">
    <zip basedir="${composer}" destfile="${basedir}/composer-${composer-version}.zip"/>
  </target>
	
  <target name="dist-init">
    <delete failonerror="false" includeemptydirs="true">
      <fileset dir="${dist}" includes="*/**"/>
    </delete>
    <mkdir dir="${dist}"/>
  </target>
  
  <target name="composer-init">
    <delete failonerror="false" includeemptydirs="true">
      <fileset dir="${composer}" includes="*/**"/>
    </delete>
    <mkdir dir="${composer}"/>
  </target>
  
</project>
